import { useCart } from '../context/CartContext';
import { AuthContext } from '../context/AuthContext';
import { useContext, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import apiClient from '../services/api';
import './CartPage.css';

function CartPage() {
Â  const {Â 
Â  Â  cartItems,Â 
Â  Â  removeFromCart,Â 
Â  Â  updateQuantity,Â 
Â  Â  clearCart,Â 
Â  Â  getTotalPrice,
Â  Â  getTotalItemsÂ 
Â  } = useCart();

Â  const { isAuthenticated } = useContext(AuthContext);
Â  const navigate = useNavigate();
Â  const [processing, setProcessing] = useState(false);

Â  const formatCurrency = (amount) => {
Â  Â  return `$${amount?.toLocaleString('es-ES', { minimumFractionDigits: 2 }) || '0.00'}`;
Â  };

Â  const handleQuantityChange = (id_producto, newQuantity) => {
Â  Â  if (newQuantity < 1) return;
Â  Â  updateQuantity(id_producto, newQuantity);
Â  };

Â  const handleCheckout = async () => {
Â  Â  if (!isAuthenticated) {
Â  Â  Â  navigate('/login');
Â  Â  Â  return;
Â  Â  }

Â  Â  setProcessing(true);
Â  Â  try {
Â  Â  Â  const response = await apiClient.post('/api/orders', {Â 
Â  Â  Â  Â  items: cartItemsÂ 
Â  Â  Â  });
Â  Â  Â Â 
Â  Â  Â  if (response.data.success) {
Â  Â  Â  Â  clearCart();
Â  Â  Â  Â  navigate('/order-success');
Â  Â  Â  }
Â  Â  } catch (error) {
Â  Â  Â  console.error('Error creating order:', error);
Â  Â  Â  alert(error.response?.data?.message || 'Error al procesar el pedido. Intenta nuevamente.');
Â  Â  } finally {
Â  Â  Â  setProcessing(false);
Â  Â  }
Â  };

Â  if (cartItems.length === 0) {
Â  Â  return (
Â  Â  Â  <div className="container">
Â  Â  Â  Â  <div className="empty-cart">
Â  Â  Â  Â  Â  <div className="empty-cart-icon">ðŸ›’</div>
Â  Â  Â  Â  Â  <h1>Tu carrito estÃ¡ vacÃ­o</h1>
Â  Â  Â  Â  Â  <p>Â¡Descubre productos increÃ­bles en nuestra tienda!</p>
Â  Â  Â  Â  Â  <Link to="/store">
Â  Â  Â  Â  Â  Â  <button className="btn btn-primary" style={{ padding: '1rem 2rem', fontSize: '1.1rem' }}>
Â  Â  Â  Â  Â  Â  Â  Explorar Tienda
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div className="container">
Â  Â  Â  <div className="cart-header">
Â  Â  Â  Â  <h1>ðŸ›’ Mi Carrito de Compras</h1>
Â  Â  Â  Â  <buttonÂ 
Â  Â  Â  Â  Â  onClick={clearCart}
Â  Â  Â  Â  Â  disabled={processing}
Â  Â  Â  Â  Â  className="btn btn-outline"
Â  Â  Â  Â  Â  style={{ color: 'var(--color-error)', borderColor: 'var(--color-error)' }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Vaciar Carrito
Â  Â  Â  Â  </button>
Â  Â  Â  </div>

Â  Â  Â  <div className="cart-layout">
Â  Â  Â  Â  <div className="cart-items">
Â  Â  Â  Â  Â  {cartItems.map((item, index) => (
Â  Â  Â  Â  Â  Â  <div key={item.id_producto} className="cart-item">
Â  Â  Â  Â  Â  Â  Â  <div className="product-image">ðŸš´</div>

Â  Â  Â  Â  Â  Â  Â  <div className="product-info">
Â  Â  Â  Â  Â  Â  Â  Â  <h3>{item.nombre}</h3>
Â  Â  Â  Â  Â  Â  Â  Â  {item.descripcion && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <p className="product-description">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {item.descripcion.length > 100Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? `${item.descripcion.substring(0, 100)}...`Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : item.descripcion
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="product-meta">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="category-tag">{item.categoria}</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="stock-info">Stock: {item.inventario}</span>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  <div className="quantity-controls">
Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleQuantityChange(item.id_producto, item.cantidad - 1)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={processing}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="quantity-btn"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  -
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  <span className="quantity-display">{item.cantidad}</span>
Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleQuantityChange(item.id_producto, item.cantidad + 1)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={processing || item.cantidad >= item.inventario}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="quantity-btn"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  +
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  <div className="item-total">
Â  Â  Â  Â  Â  Â  Â  Â  <div className="total-price">{formatCurrency(item.precio * item.cantidad)}</div>
Â  Â  Â  Â  Â  Â  Â  Â  <small className="unit-price">{formatCurrency(item.precio)} c/u</small>
Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => removeFromCart(item.id_producto)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={processing}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="remove-btn"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Eliminar
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="order-summary">
Â  Â  Â  Â  Â  <h2 className="summary-header">Resumen del Pedido</h2>

Â  Â  Â  Â  Â  <div style={{ marginBottom: '1.5rem' }}>
Â  Â  Â  Â  Â  Â  <div className="summary-row">
Â  Â  Â  Â  Â  Â  Â  <span>Productos ({getTotalItems()})</span>
Â  Â  Â  Â  Â  Â  Â  <span style={{ fontWeight: '500' }}>{formatCurrency(getTotalPrice())}</span>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className="summary-row">
Â  Â  Â  Â  Â  Â  Â  <span>EnvÃ­o</span>
Â  Â  Â  Â  Â  Â  Â  <span style={{ color: 'var(--color-success)', fontWeight: '500' }}>Gratis</span>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className="summary-total">
Â  Â  Â  Â  Â  Â  Â  <span>Total</span>
Â  Â  Â  Â  Â  Â  Â  <span className="total-amount">{formatCurrency(getTotalPrice())}</span>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {!isAuthenticated ? (
Â  Â  Â  Â  Â  Â  <Link to="/login" style={{ textDecoration: 'none' }}>
Â  Â  Â  Â  Â  Â  Â  <button className="btn btn-secondary checkout-btn">
Â  Â  Â  Â  Â  Â  Â  Â  Iniciar SesiÃ³n para Comprar
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  onClick={handleCheckout}
Â  Â  Â  Â  Â  Â  Â  disabled={processing}
Â  Â  Â  Â  Â  Â  Â  className="btn btn-primary checkout-btn"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {processing ? 'Procesando...' : 'Proceder al Pago'}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  <Link to="/store" style={{ textDecoration: 'none' }}>
Â  Â  Â  Â  Â  Â  <buttonÂ 
Â  Â  Â  Â  Â  Â  Â  disabled={processing}
Â  Â  Â  Â  Â  Â  Â  className="continue-shopping"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Seguir Comprando
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
}

export default CartPage;